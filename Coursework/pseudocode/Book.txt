BOOK CLASS EXPLANATION
====================

// This line means our Book class can be compared with other Book objects (needed for sorting)
CLASS Book IMPLEMENTS Comparable<Book>:

    // These are the basic properties every book must have
    PRIVATE title: String       // The name of the book, kept private so it can't be changed directly
    PRIVATE quantity: Integer   // How many copies of this book, also kept private

    // This is the constructor - it's called when we create a new Book
    // It requires two pieces of information: the book's title and how many copies
    CONSTRUCTOR Book(title: String, quantity: Integer):
        this.title = title         // Save the given title to this book's title
        this.quantity = quantity   // Save the given quantity to this book's quantity

    // This is a "getter" method - it lets other code see the title, but not change it
    METHOD getTitle() RETURNS String:
        RETURN title              // Give back the title of this book

    // Another "getter" method - for seeing how many copies we have
    METHOD getQuantity() RETURNS Integer:
        RETURN quantity          // Give back the quantity of this book

    // This method tells Java how to convert a Book into a text string
    // Used when we want to print the book's information
    METHOD toString() RETURNS String:
        RETURN title + " (Qty: " + quantity + ")"   // Shows like: "Java Programming (Qty: 3)"

    // This method tells Java how to compare two books
    // It's used when we need to sort books by their titles
    METHOD compareTo(other: Book) RETURNS Integer:
        RETURN this.title.compareTo(other.title)    // Compare this book's title with another book's title
        // Returns: negative if this book comes first alphabetically
        //          zero if the titles are exactly the same
        //          positive if the other book comes first alphabetically

END CLASS

EXPLANATION OF USAGE:
-------------------
1. When we want to create a new book:
   book = NEW Book("Harry Potter", 5)
   // This creates a book titled "Harry Potter" with 5 copies

2. To get information about the book:
   title = book.getTitle()      // Gets "Harry Potter"
   qty = book.getQuantity()     // Gets 5

3. To print the book:
   print(book)  // Will show: "Harry Potter (Qty: 5)"

4. When sorting books:
   The compareTo method is automatically used by the sorting algorithm
   to put books in alphabetical order by their titles 