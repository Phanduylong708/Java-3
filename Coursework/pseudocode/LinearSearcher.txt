LINEAR SEARCHER EXPLANATION
========================

CLASS LinearSearcher:
    // This is a utility class that provides a method to search in arrays
    // It uses the linear search algorithm, which is like checking each item in a list one by one

    /**
     * Searches for an item in an array by checking each element
     * Returns the position (index) where the item is found
     * Returns -1 if the item isn't found
     */
    METHOD search(arr: Array of T, key: T) RETURNS Integer:
        // First, make sure we have a valid array to search in
        IF arr IS NULL THEN:
            RETURN -1    // Can't search in nothing!

        // Check each element one by one
        FOR i = 0 TO arr.length - 1:
            // If this element equals what we're looking for
            IF arr[i].equals(key) THEN:
                RETURN i    // Found it! Return its position
        
        // If we get here, we checked everything and didn't find it
        RETURN -1

END CLASS

EXPLANATION OF HOW LINEAR SEARCH WORKS:
-----------------------------------
Imagine you're looking for a specific book on a shelf:

1. Start at one end of the shelf
2. Look at each book one at a time
3. Compare it with what you're looking for
4. If you find it, remember its position
5. If you reach the end without finding it, it's not there

Example:
Looking for "Cat" in: ["Dog", "Bird", "Cat", "Fish"]
1. Check "Dog" - Not it
2. Check "Bird" - Not it
3. Check "Cat" - Found it! Position 2
4. Don't need to check "Fish"

USAGE EXAMPLE:
------------
// To search for an order by ID:
orders = [Order(1), Order(2), Order(3)]
searchFor = Order(2)    // Create a dummy order with ID 2
position = LinearSearcher.search(orders, searchFor)
// Result: position = 1 (second position, because we count from 0)

NOTE: This searching method is:
- Simple to understand and implement
- Works on any type of array
- Guaranteed to find the item if it exists
- Best for small arrays or when items aren't sorted
- Slower for large arrays (checks every item) 